name: Write findings to CSV file

on:
  workflow_dispatch: 
  schedule:
    - cron: '0 * * * *' # Run every hour at 00 minutes

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: checkout repo content
        uses: actions/checkout@v3 # checkout the repository content to github runner

      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9' # install the python version needed
          
      - name: install python packages
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pandas openpyxl

      - name: create filename for findings file with current time & date-1
        run: |
          echo "CURRENT_DATE=$(date +'%H-%M--%d-%m-%y')" >> $GITHUB_ENV
          echo "FILENAME=Findings-$CURRENT_DATE-CSV" >> $GITHUB_ENV
          echo "FILENAMEXLSX=Findings-$CURRENT_DATE-XLSX" >> $GITHUB_ENV
    
      # - name: create filename for findings file with current time & date-2
      #   run: echo "TEMP_STR=Findings" >> $GITHUB_ENV

      # - name: create filename for findings file with current time & date-3
      #   run: echo "FILENAME=$TEMP_STR-$CURRENT_DATE" >> $GITHUB_ENV
      
      # - name: create filename for findings file with current time & date-3
      #   run: echo "FILENAMEXLSX=$TEMP_STR-$CURRENT_DATE-XLSX" >> $GITHUB_ENV
      
      - name: Use Date Env Var
        run: |
          echo "$CURRENT_DATE"
          # echo "$TEMP_STR"
          echo "$FILENAME"
          echo "$FILENAMEXLSX"
          
      - name: execute py script # run main.py
        env:
          SEMGREP_API_WEB_TOKEN: ${{ secrets.SEMGREP_API_WEB_TOKEN }}
        run: |
          python main.py
          # python main-xlsx.py

      - name: Upload findings as Artifact- CSV     
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.FILENAME }}
          path: output.csv
          
      - name: Upload findings as Artifact- XLSX   
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.FILENAMEXLSX }}
          path: output.xlsx
          
